"""empty message

Revision ID: 701886f7a930
Revises: 0ae0d26e3b71
Create Date: 2022-06-14 21:35:42.020141

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '701886f7a930'
down_revision = '0ae0d26e3b71'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ex_name1', sa.String(length=100), nullable=False),
    sa.Column('ex_name2', sa.String(length=100), nullable=False),
    sa.Column('ex_name3', sa.String(length=100), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('sett', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_test_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_test'))
    )
    with op.batch_alter_table('basictest', schema=None) as batch_op:
        batch_op.drop_constraint('fk_basictest_predata_id_predata', type_='foreignkey')
        batch_op.drop_column('predata_id')
        batch_op.drop_column('_set')

    with op.batch_alter_table('predata', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shoulder', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('arm', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('chest', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('back', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('stomach', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('core', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('hip', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('thigh', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('body', sa.Integer(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('time', sa.DateTime(), nullable=True))
        batch_op.drop_column('set_count')
        batch_op.drop_column('power')
        batch_op.drop_column('ex_part')
        batch_op.drop_column('count_per_set')

    with op.batch_alter_table('result', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ex_name1', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('re_count1', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('re_set1', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('kcal1', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('ex_name2', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('re_count2', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('re_set2', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('kcal2', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('ex_name3', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('re_count3', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('re_set3', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('kcal3', sa.Integer(), nullable=False))
        batch_op.drop_column('re_set')
        batch_op.drop_column('kcal')
        batch_op.drop_column('ex_name')
        batch_op.drop_column('re_count')
        batch_op.drop_column('main_part')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_kcal', sa.Integer(), server_default='0', nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('total_kcal')

    with op.batch_alter_table('result', schema=None) as batch_op:
        batch_op.add_column(sa.Column('main_part', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('re_count', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('ex_name', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('kcal', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('re_set', sa.INTEGER(), nullable=False))
        batch_op.drop_column('kcal3')
        batch_op.drop_column('re_set3')
        batch_op.drop_column('re_count3')
        batch_op.drop_column('ex_name3')
        batch_op.drop_column('kcal2')
        batch_op.drop_column('re_set2')
        batch_op.drop_column('re_count2')
        batch_op.drop_column('ex_name2')
        batch_op.drop_column('kcal1')
        batch_op.drop_column('re_set1')
        batch_op.drop_column('re_count1')
        batch_op.drop_column('ex_name1')

    with op.batch_alter_table('predata', schema=None) as batch_op:
        batch_op.add_column(sa.Column('count_per_set', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('ex_part', sa.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('power', sa.VARCHAR(length=10), nullable=False))
        batch_op.add_column(sa.Column('set_count', sa.INTEGER(), nullable=False))
        batch_op.drop_column('time')
        batch_op.drop_column('body')
        batch_op.drop_column('thigh')
        batch_op.drop_column('hip')
        batch_op.drop_column('core')
        batch_op.drop_column('stomach')
        batch_op.drop_column('back')
        batch_op.drop_column('chest')
        batch_op.drop_column('arm')
        batch_op.drop_column('shoulder')

    with op.batch_alter_table('basictest', schema=None) as batch_op:
        batch_op.add_column(sa.Column('_set', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('predata_id', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key('fk_basictest_predata_id_predata', 'predata', ['predata_id'], ['id'], ondelete='CASCADE')

    op.drop_table('test')
    # ### end Alembic commands ###
